name: Release cisraeliqueue

on:
  release:
    types: [published]

jobs:
  check_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Verify version
        run: |
          TOML_VER=$(awk "/version =/ { print \$3 }" pyproject.toml)
          echo pyproject.toml version - "$TOML_VER"
          TAG_VER=${{ github.event.release.tag_name }}
          echo Tag version "$TAG_VER"
          [[ $TAG_VER == $TOML_VER ]]
  upload_test_pypi:
    needs: check_version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12", "3.13.0-rc.2"]
    environment:
      name: Test PyPi
      url: https://test.pypi.org/p/cisraeliqueue
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheel
        run: |
          mkdir dist
          pipx run build
      - name: Release to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
            repository-url: https://test.pypi.org/legacy/
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
  upload_production_pypi:
    needs: upload_test_pypi
    runs-on: ubuntu-latest
    environment:
      name: Production PyPi
      url: https://pypi.org/p/cisraeliqueue
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: AButler/upload-release-assets@v3.0
        with:
          files: 'dist/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        
